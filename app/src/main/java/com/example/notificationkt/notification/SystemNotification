package com.example.notificationkt.notification

import android.app.NotificationChannel
import android.app.NotificationManager
import android.graphics.BitmapFactory
import android.os.Build
import android.os.Bundle
import android.widget.Button
import androidx.appcompat.app.AppCompatActivity
import androidx.core.app.NotificationCompat
import androidx.core.content.ContextCompat
import com.example.notificationkt.R

class MainActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        createNotificationChannel()

        val button: Button = findViewById(R.id.btnNotification)
        button.setOnClickListener {
            showNotification()
        }
    }

    private fun createNotificationChannel() {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            val channelName = "noti"
            val channelDescription = "notiDes"
            val importance = NotificationManager.IMPORTANCE_HIGH

            val channel = NotificationChannel("notification", channelName, importance).apply {
                description = channelDescription
            }

            val notificationManager = getSystemService(NotificationManager::class.java)
            notificationManager.createNotificationChannel(channel)
        }
    }

    private fun showNotification() {
        val notificationManager = getSystemService(NotificationManager::class.java)

        val notificationId = 1
        val builder = NotificationCompat.Builder(this, "notification")
            .setSmallIcon(R.drawable.notification)
            .setColor(ContextCompat.getColor(this, R.color.Red))
            .setContentTitle("E2Logy Software Solutions")
            .setLargeIcon(BitmapFactory.decodeResource(resources, R.drawable.notification))
            .setContentText("Mobile/Web Software development company")
            .setPriority(NotificationCompat.DEFAULT_ALL)
            .setAutoCancel(true)


        notificationManager.notify(notificationId, builder.build())
    }
}
